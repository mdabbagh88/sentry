// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TeamSettings render() renders 1`] = `
<SideEffect(DocumentTitle)
  title="Team Settings - Sentry"
>
  <div>
    <Form
      allowUndo={true}
      apiMethod="PUT"
      cancelLabel="Cancel"
      className="form-stacked"
      footerClass="form-actions align-right"
      initialData={
        Object {
          "name": "Team Name",
          "slug": "team-slug",
        }
      }
      model={
        TeamFormModel {
          "api": Client {},
          "fieldDescriptor": Map {},
          "initialData": Object {},
          "options": Object {},
          "orgId": "org",
          "snapshots": Array [],
          "teamId": "team-slug",
        }
      }
      onSubmitError={[Function]}
      onSubmitSuccess={[Function]}
      requireChanges={false}
      saveOnBlur={true}
      submitDisabled={false}
      submitLabel="Save Changes"
    >
      <Box>
        <JsonForm
          additionalFieldProps={Object {}}
          forms={
            Array [
              Object {
                "fields": Array [
                  Object {
                    "help": "The name of your team",
                    "label": "Name",
                    "name": "name",
                    "placeholder": "e.g. API Team",
                    "required": true,
                    "type": "string",
                  },
                  Object {
                    "help": "A unique ID used to identify the team",
                    "label": "Short Name",
                    "name": "slug",
                    "placeholder": "e.g. api-team",
                    "required": true,
                    "type": "string",
                  },
                ],
                "title": "Team Settings",
              },
            ]
          }
        />
      </Box>
    </Form>
  </div>
</SideEffect(DocumentTitle)>
`;

exports[`TeamSettings render() renders with remove team 1`] = `
<SideEffect(DocumentTitle)
  title="Team Settings - Sentry"
>
  <div>
    <Form
      allowUndo={true}
      apiMethod="PUT"
      cancelLabel="Cancel"
      className="form-stacked"
      footerClass="form-actions align-right"
      initialData={
        Object {
          "name": "Team Name",
          "slug": "team-slug",
        }
      }
      model={
        TeamFormModel {
          "api": Client {},
          "fieldDescriptor": Map {},
          "initialData": Object {},
          "options": Object {},
          "orgId": "org",
          "snapshots": Array [],
          "teamId": "team-slug",
        }
      }
      onSubmitError={[Function]}
      onSubmitSuccess={[Function]}
      requireChanges={false}
      saveOnBlur={true}
      submitDisabled={false}
      submitLabel="Save Changes"
    >
      <Box>
        <JsonForm
          additionalFieldProps={Object {}}
          forms={
            Array [
              Object {
                "fields": Array [
                  Object {
                    "help": "The name of your team",
                    "label": "Name",
                    "name": "name",
                    "placeholder": "e.g. API Team",
                    "required": true,
                    "type": "string",
                  },
                  Object {
                    "help": "A unique ID used to identify the team",
                    "label": "Short Name",
                    "name": "slug",
                    "placeholder": "e.g. api-team",
                    "required": true,
                    "type": "string",
                  },
                ],
                "title": "Team Settings",
              },
            ]
          }
        />
      </Box>
    </Form>
    <div
      className="box"
    >
      <div
        className="box-header"
      >
        <h3>
          Remove Team
        </h3>
      </div>
      <div
        className="box-content with-padding"
      >
        <p>
          <a
            className="btn btn-danger pull-right"
            href="/organizations/org/teams/team-slug/remove/"
          >
            Remove Team
          </a>
          Remove team. This may affect team members' access to projects and associated alert delivery.
        </p>
      </div>
    </div>
  </div>
</SideEffect(DocumentTitle)>
`;
